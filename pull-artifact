#!/bin/bash

# Enable debugging ...
[ -v DEBUG ] || DEBUG="false"
case "${DEBUG,,}" in
	true ) DEBUG="true" ;;
	* ) DEBUG="false" ;;
esac
${DEBUG} && set -x

set -euo pipefail

timestamp() {
	date -Ins
}

say() {
	echo -e "$(timestamp): ${@}"
}

fail() {
	say "${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

usage() {
	echo -e "usage: ${BASH_SOURCE} source targetFile [version]"
	echo -e ""
	echo -e "	The source may be a local path or a curl-compatible URL"
	echo -e "	The target *must* be the local path that the target will be stored as"
	echo -e ""
	exit 1
}

pull() {
	local URL="${1}"
	case "${URL,,}" in
		# This is a local file, so just use it
		/* | file:* )
			# Sanitize the URL into something we understand
			[[ "${URL,,}" =~ ^file: ]] && URL="${URL:5}"
			[[ "${URL}" =~ ^/ ]] || URL="/${URL}"

			# Check to see if the path it points to is viable
			[ -e "${URL}" ] || fail "The source path [${URL}] does not exist"
			[ -r "${URL}" ] || fail "The source path [${URL}] is not readable"

			# Sanitize the path
			FILE="$(readlink -f "${URL}")" || fail "Could not locate the file [${URL}]"

			# Output the path's contents
			cat "${FILE}"
			;;

		# Any other URL requires the use of CURL...
		* ) curl -kL "${URL}" ;;
	esac
}

save_target() {
	local TGT="${1}"
	local VER="${2}"
	tee --output-error=exit "${TGT}" || return ${?}
	[ -n "${VER}" ] || return 0
	echo -n "${VER}" > "${TGT}.ver"
}

render_sum() {
	local SUM="${1}"
	sha256sum | \
		sed -e 's;\s.*$;;g' | \
		tr -d '\n' > "${SUM}"
}

[ ${#} -ge 2 ] || usage
[ ${#} -le 3 ] || usage

SRC="${1}"
[ -n "${SRC}" ] || fail "The source may not be an empty string"
TGT="${2}"
[ -n "${TGT}" ] || fail "The target file may not be an empty string"
VER="${3}"
[ -n "${VER}" ] || VER="(unknown)"

SUM="${TGT}.sum"

DIR="$(dirname "${TGT}")"
[ -d "${DIR}" ] || mkdir -p "${DIR}"

say "Starting deployment of [${SRC}] as [${TGT}]..."
pull "${SRC}" | save_target "${TGT}" "${VER}" | render_sum "${SUM}"
RC=("${PIPESTATUS[@]}")

[ ${RC[0]} -eq 0 ] || fail "\tFailed to retrieve the source file from [${SRC}]"
[ ${RC[1]} -eq 0 ] || fail "\tFailed to store the retrieved file into [${TGT}]"
[ ${RC[2]} -eq 0 ] || fail "\tFailed to compute the retrieved file's checksum into [${SUM}]"

say "Deployment complete"
exit 0
