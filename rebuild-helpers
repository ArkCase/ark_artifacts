#!/bin/bash

set -euo pipefail

timestamp() {
	date -Ins -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

fail() {
	say "❌ ${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

[ -v BASE_DIR ] || BASE_DIR="/app"
[ -v FILE_DIR ] || FILE_DIR="${BASE_DIR}file"

say "👉 Cleaning out old version and checksum files..."
find "${FILE_DIR}" -type f -name '*.sum' -delete
find "${FILE_DIR}" -type f -name '*.ver' -delete

say "👉 Rendering any missing helpers for all contents of [${FILE_DIR}]..."
COUNT=0
while read FILE ; do
	say "\t👉 Processing [${FILE}]..."
	if render-helpers "${FILE}" ; then
		say "✅ done!"
		(( ++COUNT ))
		continue
	fi |& sed -e 's;^;\t\t;g'

	fail "❌ rendering failed for [${FILE}]"
done < <(find "${FILE_DIR}" -type f -not -name '*.sum' -not -name '*.ver' | sort)
S="s"
[ ${COUNT} -ne 1 ] || S=""
say "✅ rendered artifact helpers (version + checksum) for ${COUNT} element${S}"
